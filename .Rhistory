n <- data[dim(data)[1], dim(data)[2]]
data_rf <- data / n
x <- as.matrix(data_rf[, dim(data_rf)[2]])
y <- as.matrix(t(data_rf[dim(data_rf)[1], ]))
data_ef <- x %*% y
data_r <- (data_rf - data_ef) / sqrt(data_ef)
data_r
?quantile()
library(jpeg)
file <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(file,"Q2P2.jpg", mode='wb')
jpg <- readJPEG("Q2P2.jpg", native = TRUE)
quantile(jpg, c(.3, .8))
file_GDP <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
data_GDP <- read.csv(file_GDP)
file_edu <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
data_edu <- read.csv(file_edu)
head(data_GDP)
data_GDO
data_GDP
colnames(data_GDO)
colnames(data_GDP)
head(data_GDP)
head(data_edu)
?merge()
merge(data_GDP, data_edu by.x = "X", by.y = "CountryCode")
merge(data_GDP, data_edu by = c("X", "CountryCode"))
merge(data_GDP, data_edu, by = c("X", "CountryCode"))
merge(data_GDP, data_edu, by.x = "X", by.y = "CountryCode")
nrow(merge(data_GDP, data_edu, by.x = "X", by.y = "CountryCode"))
head(merge(data_GDP, data_edu, by.x = "X", by.y = "CountryCode"))
head(data_GDP)
summary(data_edu)
summary(head)
summar(data_GDP)
summary(data_GDP)
?read.csv()
file_GDP <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
data_GDP <- read.csv(file_GDP, skip = 5)
head(data_GDP)
file_GDP <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
data_GDP <- read.csv(file_GDP, skip = 4)
head(data_GDP)
file_GDP <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
data_GDP <- read.csv(file_GDP, skip = 5, header = FALSE)
head(data_GDP)
file_GDP <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
data_GDP <- read.csv(file_GDP, skip = 5, header = FALSE, nrows = 231)
head(data_GDP)
tail(data_GDP)
file_edu <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
data_edu <- read.csv(file_edu)
nrow(merge(data_GDP, data_edu, by.x = "V1", by.y = "CountryCode"))
?merge()
?read.csv()
data_GDP[, data_GDP$V2 == NA]
data_GDP
data_GDP[data_GDP$V2 == NA, ]
?complete.cases()
data_GDP[, data_GDP$V2 == NA, ]
data_GDP[is.na(data_GDP$V2), ]
data_GDP[!is.na(data_GDP$V2), ]
data_GDP <- data_GDP[!is.na(data_GDP$V2), ]
nrow(merge(data_GDP, data_edu, by.x = "V1", by.y = "CountryCode"))
data <- merge(data_GDP, data_edu, by.x = "V1", by.y = "CountryCode")
head(data)
typeof(data[data$V2])
typeof(data[data$V2, ])
typeof(1, data[data$V2, ])
typeof(data[1, data$V2, ])
typeof(data[data$V2[1], ])
typeof(data[data$V2[[1]], ])
summary(data)
str(data)
?order()
data <- merge(data_GDP, data_edu, by.x = "V1", by.y = "CountryCode")
data[Order(data$V2)]
data[order(data$V2)]
data[order(data$V2), ]
data
head(data_GDP)
file_GDP <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
data_GDP <- read.csv(file_GDP, skip = 5, header = FALSE, nrows = 231)
data_GDP <- data_GDP[!is.na(data_GDP$V2), ]
file_edu <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
data_edu <- read.csv(file_edu)
data <- merge(data_GDP, data_edu, by.x = "V1", by.y = "CountryCode")
data[order(data$V2), decreasing = TRUE]
data[13, ]
head(data_GDP)
head(data)
data[order(data$V2), decreasing = TRUE]
data[order(data$V2, decreasing = TRUE), ]
data[13, ]
data <- data[order(data$V2, decreasing = TRUE), ]
data[13, ]
file_GDP <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
data_GDP <- read.csv(file_GDP, skip = 5, header = FALSE, nrows = 231)
data_GDP <- data_GDP[!is.na(data_GDP$V2), ]
file_edu <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
data_edu <- read.csv(file_edu)
data <- merge(data_GDP, data_edu, by.x = "V1", by.y = "CountryCode")
data <- data[order(data$V2, decreasing = TRUE), ]
data[13, ]
nrow(data)
str(data)
data
str(data)
data[data$Income.Group == "High income: OECD", 2]
mean(data[data$Income.Group == "High income: OECD", 2])
mean(data[data$Income.Group == "High income: OECD", 2])
mean(data[data$Income.Group == "High income: nonOECD", 2])
quantile(data$V2)
?quantile()
quantile(data$V2, c(0, .2, .4, .8, 1))
?table()
?quantile()
quantile(data$V2, c(.2, .4, .8))
install.packages("Hmisc")
library(Hmisc)
?cut2()
data$rankGroups <- cut2(data$V2, g = 5)
summary(data)
?table()
table(data$rankGroups)
table(data$rankGroups, data$Income.Group)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?splom()
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
lilbrary(ggplot2)
library(ggplot2)
install.packages("ggplot2")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
?transform()
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies) + geom_smooth()
?geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?trellis()
?par_set()
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(votes, rating, data = movies) + geom_smooth()
?index()
install.packages("quantmod")
library(quantmod)
?index()
?yearmon()
?paste0()
?interaction()
?transform()
library(plyr)
install.packages("plyr")
library(plyr)
?aggregate()
library(reshape2)
data <- read.csv("activity.csv", header = TRUE, na.strings = "NA")
data$date <- as.Date(data$date, "%Y-%m-%d")
datesummary <- dcast(data, date~interval, value.var = "steps")
datesummary <- cbind(datesummary, rowSums(datesummary[2:ncol(datesummary)], na.rm = TRUE))
colnames(datesummary) <- c(colnames(datesummary[1:ncol(datesummary) - 1]), "total")
setwd("C:/Users/scott/Google Drive/Coursera/Statistics and Data Analysis/2014 09 01 Reproducible Research/pa1")
library(reshape2)
data <- read.csv("activity.csv", header = TRUE, na.strings = "NA")
data$date <- as.Date(data$date, "%Y-%m-%d")
datesummary <- dcast(data, date~interval, value.var = "steps")
datesummary <- cbind(datesummary, rowSums(datesummary[2:ncol(datesummary)], na.rm = TRUE))
colnames(datesummary) <- c(colnames(datesummary[1:ncol(datesummary) - 1]), "total")
hist(datesummary[, "total"],
main = "Count by Total Steps Per Day",
xlab = "Total Steps",
ylab = "Number of Days",
col = "red",
yaxp = c(0, 30, 6))
box(which = "outer", col = "black")
totalsteps_mean <- format(mean(datesummary[, "total"]), nsmall = 1)
totalsteps_median <- format(median(datesummary[, "total"]), nsmall = 1)
averagesteps <- colMeans(datesummary[2:289], na.rm = TRUE)
plot(names(averagesteps),
averagesteps,
type = "l",
main = "Average Steps per 5-Minute Interval",
xlab = "5-Minute Interval",
ylab = "Average Steps")
box(which = "outer", col = "black")
maxavg <- max(averagesteps)
maxavgcolidx <- which(match(averagesteps, maxavg) == 1)
maxavginterval <- names(averagesteps[maxavgcolidx])
missingnum <- sum(is.na(data$steps))
datesummaryimp <- datesummary[1:ncol(datesummary) - 1]
for (row in 1:nrow(datesummaryimp)) {
for (col in 2:ncol(datesummaryimp)) {
if (is.na(datesummaryimp[row, col])) {
datesummaryimp[row, col] <- averagesteps[col - 1]
}
}
}
datesummaryimp <- cbind(datesummaryimp, rowSums(datesummaryimp[2:ncol(datesummaryimp)], na.rm = TRUE))
colnames(datesummaryimp) <- c(colnames(datesummaryimp[1:289]), "total")
hist(datesummaryimp[, "total"],
main = "Count by Total Steps Per Day",
xlab = "Total Steps",
ylab = "Number of Days",
col = "red",
yaxp = c(0, 40, 8))
box(which = "outer", col = "black")
totalstepsimp_mean <- format(mean(datesummaryimp[, "total"]), nsmall = 1)
totalstepsimp_median <- format(median(datesummaryimp[, "total"]), nsmall = 1)
datamelt <- melt(datesummaryimp[1:(ncol(datesummary) - 1)], id = "date")
head(datamelt)
weekend <- function(date) {
dayofweek <- weekdays(date)
if (dayofweek == "Saturday" | dayofweek == "Sunday") {
return ("weekend")
}
else {
return ("weekday")
}
}
weekpart <- sapply(datamelt$date, weekend)
columns <- c("weekpart", "interval", "value")
datamelt <- cbind(weekpart, datamelt[2:3])
colnames(datamelt) <- columns
head(datmelt
)
head(datamelt)
?aggregate()
aggregate(datamelt, c("weekpart", "interval"), sum)
aggregate(x = datamelt, by = c("weekpart", "interval"), sum)
aggregate(x = datamelt, by = list(c("weekpart", "interval")), sum)
aggregate(value ~ weekpart + interval, data = datamelt, sum)
x <- aggregate(value ~ weekpart + interval, data = datamelt, sum)
str(x)
?xyplot()
library(lattice)
?xyplot()
xyplot(value ~ interval | weekpart, x)
xyplot(value ~ interval | weekpart, x, row = 2)
xyplot(value ~ interval | weekpart, x, layout = c(1, 2))
databyinterval <- aggregate(value ~ weekpart + interval, data = datamelt, sum)
xyplot(value ~ interval | weekpart,
databyinterval,
layout = c(1, 2))
?xyplot()
xyplot(value ~ interval | weekpart,
databyinterval,
layout = c(1, 2),
type = "l")
?xyplot()
?axis()
axis(1, tck = 250)
xyplot(value ~ interval | weekpart,
databyinterval,
layout = c(1, 2),
type = "l")
axis(1, tck = 250)
str(databyinterval)
xyplot(value ~ interval | weekpart,
databyinterval,
layout = c(1, 2),
type = "l",
lables = c("0", "50", "2500")
xyplot(value ~ interval | weekpart,
databyinterval,
layout = c(1, 2),
type = "l",
lables = c("0", "50", "2500")
xyplot(value ~ interval | weekpart,
databyinterval,
layout = c(1, 2),
type = "l",
lables = c("0", "50", "2500"))
xyplot(value ~ interval | weekpart,
databyinterval,
layout = c(1, 2),
type = "l",
ticks = FALSE)
xyplot(value ~ interval | weekpart,
databyinterval,
layout = c(1, 2),
type = "l",
tick = FALSE)
?xyplot()
xyplot(value ~ interval | weekpart,
databyinterval,
layout = c(1, 2),
type = "l",
scales=list(x=list(labels=c('T1', 'T2', 'T3' , 'T4','T5'))) ))
xyplot(value ~ interval | weekpart,
databyinterval,
layout = c(1, 2),
type = "l",
scales=list(x=list(labels=c('T1', 'T2', 'T3' , 'T4','T5'))))
xyplot(value ~ interval | weekpart,
databyinterval,
layout = c(1, 2),
type = "l",
scales=list(x=list(labels=c('T1', 'T2', 'T3' , 'T4','T5'))))
xyplot(value ~ interval | weekpart,
databyinterval,
layout = c(1, 2),
type = "l",
scales=list(draw = FALSE))
?axis()
axis(1, c(0, 1500, 2200))
xyplot(value ~ interval | weekpart,
databyinterval,
layout = c(1, 2),
type = "l",
scales=list(draw = FALSE))
axis(1, c(0, 1500, 2200))
xyplot(value ~ interval | weekpart,
databyinterval,
layout = c(1, 2),
type = "l",
scales=list(draw = FALSE))
axis(1, labels = c(0, 1500, 2200))
xyplot(value ~ interval | weekpart,
databyinterval,
layout = c(1, 2),
type = "l",
scales=list(draw = FALSE))
axis("bottom",
at = c("0", "500"),
labels = c("0", "500"))
xyplot(value ~ interval | weekpart,
databyinterval,
layout = c(1, 2),
type = "l",
scales=list(draw = FALSE))
axis("bottom",
at = c("0", "500"),
labels = c("0", "500"))
databyinterval <- aggregate(value ~ weekpart + interval, data = datamelt, mean)
xyplot(value ~ interval | weekpart,
databyinterval,
layout = c(1, 2),
type = "l",
scales=list(draw = FALSE))
xyplot(value ~ interval | weekpart,
databyinterval,
layout = c(1, 2),
type = "l")
xyplot(value ~ interval | weekpart,
databyinterval,
layout = c(1, 2),
type = "l",
ylab = "Number of Steps",
xlab = "Interval")
xyplot(value ~ interval | weekpart,
databyinterval,
layout = c(1, 2),
type = "l",
ylab = "Number of Steps",
xlab = "Interval",
scales=list(x=list(labels=c("Talk therapy","Drug Therapy"))),)
x <- as.numeric(databyinterval("interval"))
head(databyinterval)
x <- as.numerica(databyinterval$interval)
x <- as.numerical(databyinterval$interval)
x <- as.numeric(databyinterval$interval)
x
databyinterval$interval <- as.numeric(databyinterval$interval)
str(databyinterval)
xyplot(value ~ interval | weekpart,
databyinterval,
layout = c(1, 2),
type = "l",
ylab = "Number of Steps",
xlab = "Interval",
scales=list(x=list(labels=c("Talk therapy","Drug Therapy"))),)
xyplot(value ~ interval | weekpart,
databyinterval,
layout = c(1, 2),
type = "l",
ylab = "Number of Steps",
xlab = "Interval")
summary(databyinterval)
datamelt <- melt(datesummaryimp[1:(ncol(datesummary) - 1)], id = "date")
weekend <- function(date) {
dayofweek <- weekdays(date)
if (dayofweek == "Saturday" | dayofweek == "Sunday") {
return ("weekend")
}
else {
return ("weekday")
}
}
weekpart <- sapply(datamelt$date, weekend)
columns <- c("weekpart", "interval", "value")
datamelt <- cbind(weekpart, datamelt[2:3])
colnames(datamelt) <- columns
databyinterval <- aggregate(value ~ weekpart + interval, data = datamelt, mean)
summary(databyinterval)
xyplot(value ~ interval | weekpart,
databyinterval,
layout = c(1, 2),
type = "l",
ylab = "Number of Steps",
xlab = "Interval")
databyinterval$interval <- as.numeric(databyinterval$interval)
xyplot(value ~ interval | weekpart,
databyinterval,
layout = c(1, 2),
type = "l",
ylab = "Number of Steps",
xlab = "Interval")
datamelt <- melt(datesummaryimp[1:(ncol(datesummary) - 1)], id = "date")
weekend <- function(date) {
dayofweek <- weekdays(date)
if (dayofweek == "Saturday" | dayofweek == "Sunday") {
return ("weekend")
}
else {
return ("weekday")
}
}
weekpart <- sapply(datamelt$date, weekend)
columns <- c("weekpart", "interval", "value")
datamelt <- cbind(weekpart, datamelt[2:3])
colnames(datamelt) <- columns
databyinterval <- aggregate(value ~ weekpart + interval, data = datamelt, mean)
databyinterval
databyinterval$intervalx <- as.numeric(databyinterval$interval)
databyintervalx
databyinterval
databyinterval$intervalx <- as.numeric(levels(databyinterval$interval))
databyinterval
datamelt <- melt(datesummaryimp[1:(ncol(datesummary) - 1)], id = "date")
weekend <- function(date) {
dayofweek <- weekdays(date)
if (dayofweek == "Saturday" | dayofweek == "Sunday") {
return ("weekend")
}
else {
return ("weekday")
}
}
weekpart <- sapply(datamelt$date, weekend)
columns <- c("weekpart", "interval", "value")
datamelt <- cbind(weekpart, datamelt[2:3])
colnames(datamelt) <- columns
databyinterval <- aggregate(value ~ weekpart + interval, data = datamelt, mean)
databyinterval$interval <- as.numeric(levels(databyinterval$interval))
xyplot(value ~ interval | weekpart,
databyinterval,
layout = c(1, 2),
type = "l",
ylab = "Number of Steps",
xlab = "Interval")
databyinterval
head(databyinterval)
datamelt <- melt(datesummaryimp[1:(ncol(datesummary) - 1)], id = "date")
weekend <- function(date) {
dayofweek <- weekdays(date)
if (dayofweek == "Saturday" | dayofweek == "Sunday") {
return ("weekend")
}
else {
return ("weekday")
}
}
weekpart <- sapply(datamelt$date, weekend)
columns <- c("weekpart", "interval", "value")
datamelt <- cbind(weekpart, datamelt[2:3])
colnames(datamelt) <- columns
databyinterval <- aggregate(value ~ weekpart + interval, data = datamelt, mean)
databyinterval
head(databyinterval)
databyinterval$interval <- as.numeric(levels(databyinterval$interval))
head(databyinterval)
?levels()
levels(databyinterval$interval)
databyinterval$intervalx <- as.numeric(levels(databyinterval$interval))[databyinterval$interval]
databyinterval <- aggregate(value ~ weekpart + interval, data = datamelt, mean)
databyinterval$intervalx <- as.numeric(levels(databyinterval$interval))[databyinterval$interval]
databyinterval
databyinterval <- aggregate(value ~ weekpart + interval, data = datamelt, mean)
databyinterval$interval <- as.numeric(levels(databyinterval$interval))[databyinterval$interval]
xyplot(value ~ interval | weekpart,
databyinterval,
layout = c(1, 2),
type = "l",
ylab = "Number of Steps",
xlab = "Interval")
knit2html("PA1_template.Rmd")
library(knitr)
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
