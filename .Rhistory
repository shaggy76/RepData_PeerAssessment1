}
data_q <- matrix(values, nrow = dim(data)[1] - 1, ncol = dim(data)[2] - 1, byrow = TRUE)
data_q * 100
heads <- c("Employees", "Employers", "Own-account workers", "Total")
rows <- c("Science", "Health", "School", "Total")
values <- c(169, 21, 140, 330, 83, 25, 68, 176, 286, 10, 28, 324, 538, 56, 236, 830)
data <- matrix(values, nrow = 4, ncol = 4, byrow = TRUE, dimnames = list(rows, heads))
n <- data[dim(data)[1], dim(data)[2]]
data_rf <- data / n
x <- as.matrix(data_rf[, dim(data_rf)[2]])
y <- as.matrix(t(data_rf[dim(data_rf)[1], ]))
data_ef <- x %*% y
data_chi <- data_rf - data_ef
square <- function(x) { x ^ 2}
data_chi <- square(data_chi)
data_chi <- data_chi / data_ef
chi <- sum(data_chi)
sum(data_chi)
heads <- c("Low", "Low Medium", "High Medium", "High", "Totals")
rows <- c("Free", "Partly Free", "Partly Unfree", "Unfree", "Total")
values <- c(0, 1, 7, 39, 47, 0, 13, 28, 7, 48, 16, 22, 9, 1, 48, 31, 12, 4, 0, 47, 47, 48, 48, 47, 190)
data <- matrix(values, nrow = 5, ncol = 5, byrow = TRUE, dimnames = list(rows, heads))
data
heads <- c("Low", "Low Medium", "High Medium", "High", "Totals")
rows <- c("Free", "Partly Free", "Partly Unfree", "Unfree", "Total")
values <- c(0, 1, 7, 39, 47, 0, 13, 28, 7, 48, 16, 22, 9, 1, 48, 31, 12, 4, 0, 47, 47, 48, 48, 47, 190)
data <- matrix(values, nrow = 5, ncol = 5, byrow = TRUE, dimnames = list(rows, heads))
values <- vector(mode = "numeric", length = 0)
for(i in 1:(dim(data)[1] - 1)) {
for(j in 1:(dim(data)[2])) {
values <- c(values, data[i, j] / data[dim(data)[1], j])
}
}
data_cp <- matrix(values, nrow = dim(data)[1] - 1, ncol = dim(data)[2], byrow = TRUE)
values <- vector(mode = "numeric", length = 0)
for(i in 1:(dim(data_cp)[1])) {
for(j in 1:(dim(data_cp)[2] - 1)) {
values <- c(values, (data_cp[i, j] - data_cp[i, dim(data_cp)[2]]) / data_cp[i, dim(data_cp)[2]])
}
}
data_q <- matrix(values, nrow = dim(data)[1] - 1, ncol = dim(data)[2] - 1, byrow = TRUE)
data_q
values <- (c(43, 3, 0, 0,0, 50, 5, 0,0, 2, 25, 22)
data <- matrix(values, nrow = 3, ncol = 4, byrow = TRUE)
values <- vector(mode = "numeric", length = 0)
for(i in 1:(dim(data)[1] - 1)) {
for(j in 1:(dim(data)[2])) {
values <- c(values, data[i, j] / data[dim(data)[1], j])
}
}
data_cp <- matrix(values, nrow = dim(data)[1] - 1, ncol = dim(data)[2], byrow = TRUE)
values <- vector(mode = "numeric", length = 0)
for(i in 1:(dim(data_cp)[1])) {
for(j in 1:(dim(data_cp)[2] - 1)) {
values <- c(values, (data_cp[i, j] - data_cp[i, dim(data_cp)[2]]) / data_cp[i, dim(data_cp)[2]])
}
}
data_q <- matrix(values, nrow = dim(data)[1] - 1, ncol = dim(data)[2] - 1, byrow = TRUE)
data_q
heads <- c("Employees", "Employers", "Own-account workers", "Total")
rows <- c("Science", "Health", "School", "Total")
values <- (c(43, 3, 0, 0,0, 50, 5, 0,0, 2, 25, 22)
data <- matrix(values, nrow = 3, ncol = 4, byrow = TRUE, dimnames = list(rows, heads))
n <- data[dim(data)[1], dim(data)[2]]
data_rf <- data / n
x <- as.matrix(data_rf[, dim(data_rf)[2]])
y <- as.matrix(t(data_rf[dim(data_rf)[1], ]))
data_ef <- x %*% y
data_chi <- data_rf - data_ef
square <- function(x) { x ^ 2}
data_chi <- square(data_chi)
data_chi <- data_chi / data_ef
data_chi
heads <- c("Employees", "Employers", "Own-account workers", "Total")
rows <- c("Science", "Health", "School", "Total")
values <- (c(43, 3, 0, 0,0, 50, 5, 0,0, 2, 25, 22)
data <- matrix(values, nrow = 3, ncol = 4, byrow = TRUE)
n <- data[dim(data)[1], dim(data)[2]]
data_rf <- data / n
x <- as.matrix(data_rf[, dim(data_rf)[2]])
y <- as.matrix(t(data_rf[dim(data_rf)[1], ]))
data_ef <- x %*% y
data_chi <- data_rf - data_ef
square <- function(x) { x ^ 2}
data_chi <- square(data_chi)
data_chi <- data_chi / data_ef
data_chi
values <- (c(43, 3, 0, 0,0, 50, 5, 0,0, 2, 25, 22)
data <- matrix(values, nrow = 3, ncol = 4, byrow = TRUE)
n <- data[dim(data)[1], dim(data)[2]]
data_rf <- data / n
x <- as.matrix(data_rf[, dim(data_rf)[2]])
y <- as.matrix(t(data_rf[dim(data_rf)[1], ]))
data_ef <- x %*% y
data_chi <- data_rf - data_ef
square <- function(x) { x ^ 2}
data_chi <- square(data_chi)
data_chi <- data_chi / data_ef
data_chi
values <- (c(43, 3, 0, 0,0, 50, 5, 0,0, 2, 25, 22)
data <- matrix(values, nrow = 3, ncol = 4, byrow = TRUE)
values <- vector(mode = "numeric", length = 0)
for(i in 1:(dim(data)[1] - 1)) {
for(j in 1:(dim(data)[2])) {
values <- c(values, data[i, j] / data[dim(data)[1], j])
}
}
data_cp <- matrix(values, nrow = dim(data)[1] - 1, ncol = dim(data)[2], byrow = TRUE)
values <- vector(mode = "numeric", length = 0)
for(i in 1:(dim(data_cp)[1])) {
for(j in 1:(dim(data_cp)[2] - 1)) {
values <- c(values, (data_cp[i, j] - data_cp[i, dim(data_cp)[2]]) / data_cp[i, dim(data_cp)[2]])
}
}
data_q <- matrix(values, nrow = dim(data)[1] - 1, ncol = dim(data)[2] - 1, byrow = TRUE)
data_q
values <- (c(43, 3, 0, 0,0, 50, 5, 0,0, 2, 25, 22)
data <- matrix(values, nrow = 3, ncol = 4, byrow = TRUE)
n <- data[dim(data)[1], dim(data)[2]]
data_rf <- data / n
x <- as.matrix(data_rf[, dim(data_rf)[2]])
y <- as.matrix(t(data_rf[dim(data_rf)[1], ]))
data_ef <- x %*% y
data_chi <- data_rf - data_ef
square <- function(x) { x ^ 2}
data_chi <- square(data_chi)
data_chi <- data_chi / data_ef
data_chi
data_rf
data
values <- (c(43, 3, 0, 0,0, 50, 5, 0,0, 2, 25, 22)
values <- c(43, 3, 0, 0,0, 50, 5, 0,0, 2, 25, 22)
data <- matrix(values, nrow = 3, ncol = 4, byrow = TRUE)
n <- data[dim(data)[1], dim(data)[2]]
data_rf <- data / n
x <- as.matrix(data_rf[, dim(data_rf)[2]])
y <- as.matrix(t(data_rf[dim(data_rf)[1], ]))
data_ef <- x %*% y
data_chi <- data_rf - data_ef
square <- function(x) { x ^ 2}
data_chi <- square(data_chi)
data_chi <- data_chi / data_ef
data_chi
values <- c(55, 5, 0, 0,0, 40, 7, 0,0, 3, 19, 21)
data <- matrix(values, nrow = 3, ncol = 4, byrow = TRUE)
values <- vector(mode = "numeric", length = 0)
for(i in 1:(dim(data)[1] - 1)) {
for(j in 1:(dim(data)[2])) {
values <- c(values, data[i, j] / data[dim(data)[1], j])
}
}
data_cp <- matrix(values, nrow = dim(data)[1] - 1, ncol = dim(data)[2], byrow = TRUE)
values <- vector(mode = "numeric", length = 0)
for(i in 1:(dim(data_cp)[1])) {
for(j in 1:(dim(data_cp)[2] - 1)) {
values <- c(values, (data_cp[i, j] - data_cp[i, dim(data_cp)[2]]) / data_cp[i, dim(data_cp)[2]])
}
}
data_q <- matrix(values, nrow = dim(data)[1] - 1, ncol = dim(data)[2] - 1, byrow = TRUE)
data_q
values <- c(55, 5, 0, 0,60,0, 40, 7, 0,47,0, 3, 19, 21,43,55, 48, 26, 21150)
data <- matrix(values, nrow = 4, ncol = 5, byrow = TRUE)
values <- c(55, 5, 0, 0,60,0, 40, 7, 0,47,0, 3, 19, 21,43,55, 48, 26, 21,150)
data <- matrix(values, nrow = 4, ncol = 5, byrow = TRUE)
data
values <- vector(mode = "numeric", length = 0)
for(i in 1:(dim(data)[1] - 1)) {
for(j in 1:(dim(data)[2])) {
values <- c(values, data[i, j] / data[dim(data)[1], j])
}
}
data_cp <- matrix(values, nrow = dim(data)[1] - 1, ncol = dim(data)[2], byrow = TRUE)
values <- vector(mode = "numeric", length = 0)
for(i in 1:(dim(data_cp)[1])) {
for(j in 1:(dim(data_cp)[2] - 1)) {
values <- c(values, (data_cp[i, j] - data_cp[i, dim(data_cp)[2]]) / data_cp[i, dim(data_cp)[2]])
}
}
data_q <- matrix(values, nrow = dim(data)[1] - 1, ncol = dim(data)[2] - 1, byrow = TRUE)
data_q
values <- c(55, 5, 0, 0,60,0, 40, 7, 0,47,0, 3, 19, 21,43,55, 48, 26, 21,150)
data <- matrix(values, nrow = 4, ncol = 5, byrow = TRUE)
n <- data[dim(data)[1], dim(data)[2]]
data_rf <- data / n
x <- as.matrix(data_rf[, dim(data_rf)[2]])
y <- as.matrix(t(data_rf[dim(data_rf)[1], ]))
data_ef <- x %*% y
data_chi <- data_rf - data_ef
square <- function(x) { x ^ 2}
data_chi <- square(data_chi)
data_chi <- data_chi / data_ef
data_chi
values <- c(48, 2, 0, 0,50,0, 46, 6, 0,52,0, 2, 25, 21,48,48, 50, 31, 21,150)
data <- matrix(values, nrow = 4, ncol = 5, byrow = TRUE)
values <- vector(mode = "numeric", length = 0)
for(i in 1:(dim(data)[1] - 1)) {
for(j in 1:(dim(data)[2])) {
values <- c(values, data[i, j] / data[dim(data)[1], j])
}
}
data_cp <- matrix(values, nrow = dim(data)[1] - 1, ncol = dim(data)[2], byrow = TRUE)
values <- vector(mode = "numeric", length = 0)
for(i in 1:(dim(data_cp)[1])) {
for(j in 1:(dim(data_cp)[2] - 1)) {
values <- c(values, (data_cp[i, j] - data_cp[i, dim(data_cp)[2]]) / data_cp[i, dim(data_cp)[2]])
}
}
data_q <- matrix(values, nrow = dim(data)[1] - 1, ncol = dim(data)[2] - 1, byrow = TRUE)
data_q
values <- c(48, 2, 0, 0,50,0, 46, 6, 0,52,0, 2, 25, 21,48,48, 50, 31, 21,150)
data <- matrix(values, nrow = 4, ncol = 5, byrow = TRUE)
n <- data[dim(data)[1], dim(data)[2]]
data_rf <- data / n
x <- as.matrix(data_rf[, dim(data_rf)[2]])
y <- as.matrix(t(data_rf[dim(data_rf)[1], ]))
data_ef <- x %*% y
data_chi <- data_rf - data_ef
square <- function(x) { x ^ 2}
data_chi <- square(data_chi)
data_chi <- data_chi / data_ef
data_chi
values <- c(46, 2, 0, 0,48,0, 46, 2, 0,48,0, 3, 21, 30,54,46, 51, 23, 30,150)
data <- matrix(values, nrow = 4, ncol = 5, byrow = TRUE)
values <- vector(mode = "numeric", length = 0)
for(i in 1:(dim(data)[1] - 1)) {
for(j in 1:(dim(data)[2])) {
values <- c(values, data[i, j] / data[dim(data)[1], j])
}
}
data_cp <- matrix(values, nrow = dim(data)[1] - 1, ncol = dim(data)[2], byrow = TRUE)
values <- vector(mode = "numeric", length = 0)
for(i in 1:(dim(data_cp)[1])) {
for(j in 1:(dim(data_cp)[2] - 1)) {
values <- c(values, (data_cp[i, j] - data_cp[i, dim(data_cp)[2]]) / data_cp[i, dim(data_cp)[2]])
}
}
data_q <- matrix(values, nrow = dim(data)[1] - 1, ncol = dim(data)[2] - 1, byrow = TRUE)
data_q
values <- c(46, 2, 0, 0,48,0, 46, 2, 0,48,0, 3, 21, 30,54,46, 51, 23, 30,150)
data <- matrix(values, nrow = 4, ncol = 5, byrow = TRUE)
n <- data[dim(data)[1], dim(data)[2]]
data_rf <- data / n
x <- as.matrix(data_rf[, dim(data_rf)[2]])
y <- as.matrix(t(data_rf[dim(data_rf)[1], ]))
data_ef <- x %*% y
data_chi <- data_rf - data_ef
square <- function(x) { x ^ 2}
data_chi <- square(data_chi)
data_chi <- data_chi / data_ef
data_chi
values <- c(51, 1, 0, 0,52,0, 45, 0, 0,45,0, 2, 22, 29,53,51, 48, 22, 29,150)
data <- matrix(values, nrow = 4, ncol = 5, byrow = TRUE)
values <- vector(mode = "numeric", length = 0)
for(i in 1:(dim(data)[1] - 1)) {
for(j in 1:(dim(data)[2])) {
values <- c(values, data[i, j] / data[dim(data)[1], j])
}
}
data_cp <- matrix(values, nrow = dim(data)[1] - 1, ncol = dim(data)[2], byrow = TRUE)
values <- vector(mode = "numeric", length = 0)
for(i in 1:(dim(data_cp)[1])) {
for(j in 1:(dim(data_cp)[2] - 1)) {
values <- c(values, (data_cp[i, j] - data_cp[i, dim(data_cp)[2]]) / data_cp[i, dim(data_cp)[2]])
}
}
data_q <- matrix(values, nrow = dim(data)[1] - 1, ncol = dim(data)[2] - 1, byrow = TRUE)
data_q
values <- c(46, 2, 0, 0,48,0, 46, 2, 0,48,0, 3, 21, 30,54,46, 51, 23, 30,150)
data <- matrix(values, nrow = 4, ncol = 5, byrow = TRUE)
n <- data[dim(data)[1], dim(data)[2]]
data_rf <- data / n
x <- as.matrix(data_rf[, dim(data_rf)[2]])
y <- as.matrix(t(data_rf[dim(data_rf)[1], ]))
data_ef <- x %*% y
data_r <- (data_rf - data_ef) / data_ef
data_r
values <- c(56, 2, 0, 0,58,0, 45, 2, 0,47,0, 4, 25, 16,45,56, 51, 27, 16,150)
data <- matrix(values, nrow = 4, ncol = 5, byrow = TRUE)
values <- vector(mode = "numeric", length = 0)
for(i in 1:(dim(data)[1] - 1)) {
for(j in 1:(dim(data)[2])) {
values <- c(values, data[i, j] / data[dim(data)[1], j])
}
}
data_cp <- matrix(values, nrow = dim(data)[1] - 1, ncol = dim(data)[2], byrow = TRUE)
values <- vector(mode = "numeric", length = 0)
for(i in 1:(dim(data_cp)[1])) {
for(j in 1:(dim(data_cp)[2] - 1)) {
values <- c(values, (data_cp[i, j] - data_cp[i, dim(data_cp)[2]]) / data_cp[i, dim(data_cp)[2]])
}
}
data_q <- matrix(values, nrow = dim(data)[1] - 1, ncol = dim(data)[2] - 1, byrow = TRUE)
data_q
values <- c(56, 2, 0, 0,58,0, 45, 2, 0,47,0, 4, 25, 16,45,56, 51, 27, 16,150)
data <- matrix(values, nrow = 4, ncol = 5, byrow = TRUE)
n <- data[dim(data)[1], dim(data)[2]]
data_rf <- data / n
x <- as.matrix(data_rf[, dim(data_rf)[2]])
y <- as.matrix(t(data_rf[dim(data_rf)[1], ]))
data_ef <- x %*% y
data_r <- (data_rf - data_ef) / data_ef
data_r
data_ef
values <- c(56, 2, 0, 0,58,0, 45, 2, 0,47,0, 4, 25, 16,45,56, 51, 27, 16,150)
data <- matrix(values, nrow = 4, ncol = 5, byrow = TRUE)
n <- data[dim(data)[1], dim(data)[2]]
data_rf <- data / n
x <- as.matrix(data_rf[, dim(data_rf)[2]])
y <- as.matrix(t(data_rf[dim(data_rf)[1], ]))
data_ef <- x %*% y
data_r <- (data_rf - data_ef) / sqrt(data_ef)
data_r
values <- c(45, 0, 0, 0,45,0, 46, 8, 0,54,0, 5, 20, 26,51,45, 51, 28, 26,150)
data <- matrix(values, nrow = 4, ncol = 5, byrow = TRUE)
values <- vector(mode = "numeric", length = 0)
for(i in 1:(dim(data)[1] - 1)) {
for(j in 1:(dim(data)[2])) {
values <- c(values, data[i, j] / data[dim(data)[1], j])
}
}
data_cp <- matrix(values, nrow = dim(data)[1] - 1, ncol = dim(data)[2], byrow = TRUE)
values <- vector(mode = "numeric", length = 0)
for(i in 1:(dim(data_cp)[1])) {
for(j in 1:(dim(data_cp)[2] - 1)) {
values <- c(values, (data_cp[i, j] - data_cp[i, dim(data_cp)[2]]) / data_cp[i, dim(data_cp)[2]])
}
}
data_q <- matrix(values, nrow = dim(data)[1] - 1, ncol = dim(data)[2] - 1, byrow = TRUE)
data_q
values <- c(45, 0, 0, 0,45,0, 46, 8, 0,54,0, 5, 20, 26,51,45, 51, 28, 26,150)
data <- matrix(values, nrow = 4, ncol = 5, byrow = TRUE)
n <- data[dim(data)[1], dim(data)[2]]
data_rf <- data / n
x <- as.matrix(data_rf[, dim(data_rf)[2]])
y <- as.matrix(t(data_rf[dim(data_rf)[1], ]))
data_ef <- x %*% y
data_r <- (data_rf - data_ef) / sqrt(data_ef)
data_r
?quantile()
library(jpeg)
file <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(file,"Q2P2.jpg", mode='wb')
jpg <- readJPEG("Q2P2.jpg", native = TRUE)
quantile(jpg, c(.3, .8))
file_GDP <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
data_GDP <- read.csv(file_GDP)
file_edu <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
data_edu <- read.csv(file_edu)
head(data_GDP)
data_GDO
data_GDP
colnames(data_GDO)
colnames(data_GDP)
head(data_GDP)
head(data_edu)
?merge()
merge(data_GDP, data_edu by.x = "X", by.y = "CountryCode")
merge(data_GDP, data_edu by = c("X", "CountryCode"))
merge(data_GDP, data_edu, by = c("X", "CountryCode"))
merge(data_GDP, data_edu, by.x = "X", by.y = "CountryCode")
nrow(merge(data_GDP, data_edu, by.x = "X", by.y = "CountryCode"))
head(merge(data_GDP, data_edu, by.x = "X", by.y = "CountryCode"))
head(data_GDP)
summary(data_edu)
summary(head)
summar(data_GDP)
summary(data_GDP)
?read.csv()
file_GDP <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
data_GDP <- read.csv(file_GDP, skip = 5)
head(data_GDP)
file_GDP <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
data_GDP <- read.csv(file_GDP, skip = 4)
head(data_GDP)
file_GDP <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
data_GDP <- read.csv(file_GDP, skip = 5, header = FALSE)
head(data_GDP)
file_GDP <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
data_GDP <- read.csv(file_GDP, skip = 5, header = FALSE, nrows = 231)
head(data_GDP)
tail(data_GDP)
file_edu <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
data_edu <- read.csv(file_edu)
nrow(merge(data_GDP, data_edu, by.x = "V1", by.y = "CountryCode"))
?merge()
?read.csv()
data_GDP[, data_GDP$V2 == NA]
data_GDP
data_GDP[data_GDP$V2 == NA, ]
?complete.cases()
data_GDP[, data_GDP$V2 == NA, ]
data_GDP[is.na(data_GDP$V2), ]
data_GDP[!is.na(data_GDP$V2), ]
data_GDP <- data_GDP[!is.na(data_GDP$V2), ]
nrow(merge(data_GDP, data_edu, by.x = "V1", by.y = "CountryCode"))
data <- merge(data_GDP, data_edu, by.x = "V1", by.y = "CountryCode")
head(data)
typeof(data[data$V2])
typeof(data[data$V2, ])
typeof(1, data[data$V2, ])
typeof(data[1, data$V2, ])
typeof(data[data$V2[1], ])
typeof(data[data$V2[[1]], ])
summary(data)
str(data)
?order()
data <- merge(data_GDP, data_edu, by.x = "V1", by.y = "CountryCode")
data[Order(data$V2)]
data[order(data$V2)]
data[order(data$V2), ]
data
head(data_GDP)
file_GDP <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
data_GDP <- read.csv(file_GDP, skip = 5, header = FALSE, nrows = 231)
data_GDP <- data_GDP[!is.na(data_GDP$V2), ]
file_edu <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
data_edu <- read.csv(file_edu)
data <- merge(data_GDP, data_edu, by.x = "V1", by.y = "CountryCode")
data[order(data$V2), decreasing = TRUE]
data[13, ]
head(data_GDP)
head(data)
data[order(data$V2), decreasing = TRUE]
data[order(data$V2, decreasing = TRUE), ]
data[13, ]
data <- data[order(data$V2, decreasing = TRUE), ]
data[13, ]
file_GDP <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
data_GDP <- read.csv(file_GDP, skip = 5, header = FALSE, nrows = 231)
data_GDP <- data_GDP[!is.na(data_GDP$V2), ]
file_edu <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
data_edu <- read.csv(file_edu)
data <- merge(data_GDP, data_edu, by.x = "V1", by.y = "CountryCode")
data <- data[order(data$V2, decreasing = TRUE), ]
data[13, ]
nrow(data)
str(data)
data
str(data)
data[data$Income.Group == "High income: OECD", 2]
mean(data[data$Income.Group == "High income: OECD", 2])
mean(data[data$Income.Group == "High income: OECD", 2])
mean(data[data$Income.Group == "High income: nonOECD", 2])
quantile(data$V2)
?quantile()
quantile(data$V2, c(0, .2, .4, .8, 1))
?table()
?quantile()
quantile(data$V2, c(.2, .4, .8))
install.packages("Hmisc")
library(Hmisc)
?cut2()
data$rankGroups <- cut2(data$V2, g = 5)
summary(data)
?table()
table(data$rankGroups)
table(data$rankGroups, data$Income.Group)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?splom()
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
lilbrary(ggplot2)
library(ggplot2)
install.packages("ggplot2")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
?transform()
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies) + geom_smooth()
?geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?trellis()
?par_set()
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(votes, rating, data = movies) + geom_smooth()
?index()
install.packages("quantmod")
library(quantmod)
?index()
?yearmon()
?paste0()
?interaction()
?transform()
setwd("C:/Users/scott/Google Drive/Coursera/Statistics and Data Analysis/2014 09 01 Reproducible Research/pa1")
pwd
getpwd
getpwd()
getwd()
?read.csv()
data <- read.csv("activity.csv", header = TRUE, na.strings = "NA")
data
